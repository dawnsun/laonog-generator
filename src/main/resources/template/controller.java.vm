package ${package}.web.controller;

import com.laonog.common.constants.DataStateConstants;
import ${package}.biz.service.${pathName}.${className}Service;
import ${package}.biz.vos.${pathName}.${className}VO;
import ${package}.biz.query.${pathName}.${className}Query;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("${secondModuleName}")
public class ${className}Controller{

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 新增${comments}
     * @param ${classname}VO
     * @return
     */
    @RequestMapping(value = "",method = RequestMethod.POST)
    @ResponseBody
    public ObjectRestResponse<${className}VO> add(@RequestBody ${className}VO ${classname}VO){
        ObjectRestResponse<${className}VO> ${classname}ObjectRestResponse = new ObjectRestResponse<>();
        ${classname}Service.insert${className}(${classname}VO);
        ${classname}ObjectRestResponse.data(${classname}VO);
        return ${classname}ObjectRestResponse;
    }

    /**
     * 查询单个${comments}
     * @param ${classname}Query
     * @return
     */
    @RequestMapping(value = "/{id}",method = RequestMethod.GET)
    @ResponseBody
    public ObjectRestResponse<${className}VO> get(@PathVariable Long id){
        ObjectRestResponse<${className}VO> ${classname}ObjectRestResponse = new ObjectRestResponse<>();
        ${className}Query ${classname}Query = new ${className}Query();
        ${classname}Query.setIsDeleted(DataStateConstants.IS_DELETED);
        ${classname}Query.setId(id);
        ${className}VO ${classname}VO = ${classname}Service.get${className}(${classname}Query);
        ${classname}ObjectRestResponse.data(${classname}VO);
        return ${classname}ObjectRestResponse;
    }

    /**
     * 修改${comments}
     * @param ${classname}VO
     * @return
     */
    @RequestMapping(value = "/{id}",method = RequestMethod.PUT)
    @ResponseBody
    public ObjectRestResponse<${className}VO> update(@RequestBody ${className}VO ${classname}VO){
        ObjectRestResponse<${className}VO> ${classname}ObjectRestResponse = new ObjectRestResponse<>();
        ${classname}Service.update${className}(${classname}VO);
        ${classname}ObjectRestResponse.data(${classname}VO);
        return ${classname}ObjectRestResponse;
    }

    /**
     * 删除${comments}
     * @param id
     * @return
     */
    @RequestMapping(value = "/{id}",method = RequestMethod.DELETE)
    @ResponseBody
    public ObjectRestResponse<${className}VO> delete(@PathVariable Long id){
        ${className}VO ${classname}VO = new ${className}VO();
        ${classname}VO.setIsDeleted(DataStateConstants.DELETED);
        ${classname}VO.setId(id);
        ${classname}Service.delete${className}(${classname}VO);
        return new ObjectRestResponse<${classname}VO>();
    }

    /**
     * 查询列表${comments}
     * @param ${classname}Query
     * @return
     */
    @RequestMapping(value = "/list",method = RequestMethod.GET)
    @ResponseBody
    public List<${className}VO> list(@RequestBody ${className}Query ${classname}Query){
        return ${classname}Service.get${className}List(${classname}Query);
    }

    /**
     * 查询分页${comments}
     * @param ${classname}Query
     * @return
     */
    @RequestMapping(value = "/page",method = RequestMethod.GET)
    @ResponseBody
    public TableResultResponse<${className}VO> list(@RequestBody ${className}Query ${classname}Query){
        return ${classname}Service.get${className}Page(${classname}Query);
    }

}