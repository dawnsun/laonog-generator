package

    ${package}.dal.dao.${pathName};

import ${package}.dal.query.${pathName}.${className}Query;
import ${package}.dal.entity.${pathName}.${className}VO;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Repository
public class ${className}Mapper extends BaseMapper {

    @Autowired
    private ${className}Mapper ${classname}Mapper;

    /**
     * 新增${comments}
     * @param ${classname}VO
     * @return
     */
    public Boolean insert${className}(${className}VO ${classname}VO) {
            ${className}DO ${classname}DO = EntityConvertUtils.convertDtoToEntity(${classname}VO, ${className}DO.class);
        int result = ${classname}Mapper.insert${className}(${classname}DO);
        return result > 0 ? Boolean.TRUE : Boolean.FALSE;
    }

    /**
     * 删除${comments}
     * @param ${classname}VO
     * @return
     */
    public Boolean delete${className}(${className}VO ${classname}VO) {
            ${className}DO ${classname}DO = EntityConvertUtils.convertDtoToEntity(${classname}VO, ${className}DO.class);
        int result = ${classname}Mapper.delete${className}(${classname}DO);
        return result > 0 ? Boolean.TRUE : Boolean.FALSE;
    }

    /**
     * 修改${comments}
     * @param ${classname}VO
     * @return
     */
    public Boolean update${className}(${className}VO ${classname}VO) {
            ${className}DO ${classname}DO = EntityConvertUtils.convertDtoToEntity(${classname}VO, ${className}DO.class);
        int result = ${classname}Mapper.update${className}(${classname}DO);
        return result > 0 ? Boolean.TRUE : Boolean.FALSE;
    }

    /**
     * 查询单个${comments}
     * @param ${classname}Query
     * @return
     */
    public ${className}VO get${className}(${className}Query ${classname}Query) {
            ${className}DO ${classname}DO = ${classname}Mapper.get${className}(${classname}Query);
        return EntityConvertUtils.convertDtoToEntity(${classname}DO, ${className}VO.class);
    }

    /**
     * 查询数量${comments}
     * @param ${classname}Query
     * @return
     */
    public Long get${className}Count(${className}Query ${classname}Query) {
        return ${classname}Mapper.get${className}Count(${classname}Query);
    }

    /**
     * 查询列表${comments}
     * @param ${classname}Query
     * @return
     */
    public List<${className}VO> get${className}List(${className}Query ${classname}Query) {
        List<${className}DO> ${className}DOS = ${classname}Mapper.get${className}List(${classname}Query);
        return EntityConvertUtils.convertDtoToEntityList(${className}DOS, ${className}VO.class);
    }

    /**
     * 查询分页${comments}
     * @param ${classname}Query
     * @return
     */
    public List<${className}VO> get${className}Page(${className}Query ${classname}Query) {
        List<${className}DO> ${className}DOS = ${classname}Mapper.get${className}Page(${classname}Query);
        return EntityConvertUtils.convertDtoToEntityList(${className}DOS, ${className}VO.class);
    }

}